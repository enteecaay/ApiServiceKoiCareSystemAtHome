[
  {
    "ContainingType": "ApiService.Controllers.AccountController",
    "Method": "ChangePassword",
    "RelativePath": "api/Account/ChangePassword{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "model",
        "Type": "Domain.Authentication.ChangePasswordModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ApiService.Controllers.AccountController",
    "Method": "ChangeRoleToVipAsync",
    "RelativePath": "api/Account/ChangeToVipAccount{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ApiService.Controllers.AccountController",
    "Method": "ConfirmEmail",
    "RelativePath": "api/Account/ConfirmEmail",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "Domain.Models.Dto.Request.ConfirmEmailRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ApiService.Controllers.AccountController",
    "Method": "SignUpAdmin",
    "RelativePath": "api/Account/CreateAdminAccount",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "Domain.Authentication.SignUpModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ApiService.Controllers.AccountController",
    "Method": "SignUp",
    "RelativePath": "api/Account/CreateMemberAccount",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "Domain.Authentication.SignUpModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ApiService.Controllers.AccountController",
    "Method": "SignUpShop",
    "RelativePath": "api/Account/CreateShopAccount",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "Domain.Authentication.SignUpModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ApiService.Controllers.AccountController",
    "Method": "SignUpVip",
    "RelativePath": "api/Account/CreateVipAccount",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "Domain.Authentication.SignUpModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ApiService.Controllers.AccountController",
    "Method": "RemoveAccountById",
    "RelativePath": "api/Account/DeleteAccount/{userId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ApiService.Controllers.AccountController",
    "Method": "GetAccountByUserIdAsync",
    "RelativePath": "api/Account/GetAccountByUserId/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ApiService.Controllers.AccountController",
    "Method": "GetMembersAsync",
    "RelativePath": "api/Account/GetMembers",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ApiService.Controllers.AccountController",
    "Method": "GetTotalMembersAsync",
    "RelativePath": "api/Account/GetTotalMembers",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ApiService.Controllers.AccountController",
    "Method": "GetTotalShopsAsync",
    "RelativePath": "api/Account/GetTotalShops",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ApiService.Controllers.AccountController",
    "Method": "GetTotalVipsAsync",
    "RelativePath": "api/Account/GetTotalVips",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ApiService.Controllers.AccountController",
    "Method": "GetUserIdByEmailAsync",
    "RelativePath": "api/Account/GetUserIdByEmail/{email}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ApiService.Controllers.AccountController",
    "Method": "GetVipsAsync",
    "RelativePath": "api/Account/GetVips",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ApiService.Controllers.AccountController",
    "Method": "GmailSignIn",
    "RelativePath": "api/Account/gmail-signin",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "token",
        "Type": "Domain.Authentication.TokenRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ApiService.Controllers.AccountController",
    "Method": "LockoutDisableAsync",
    "RelativePath": "api/Account/LockoutDisable/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ApiService.Controllers.AccountController",
    "Method": "LockoutEnableAsync",
    "RelativePath": "api/Account/LockoutEnable/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ApiService.Controllers.AccountController",
    "Method": "RefreshTokenAsync",
    "RelativePath": "api/Account/refresh-token",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "refreshToken",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ApiService.Controllers.AccountController",
    "Method": "RequestResetPassword",
    "RelativePath": "api/Account/RequestResetPassword/{email}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ApiService.Controllers.AccountController",
    "Method": "ResetPassword",
    "RelativePath": "api/Account/ResetPassword/{email}/{token}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "token",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "newPass",
        "Type": "Domain.Authentication.NewPasswordModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ApiService.Controllers.AccountController",
    "Method": "SignIn",
    "RelativePath": "api/Account/SignIn",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "Domain.Authentication.SignInModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ApiService.Controllers.AccountController",
    "Method": "UpdateAccountDetail",
    "RelativePath": "api/Account/UpdateAccountDetail{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "model",
        "Type": "Domain.Authentication.AccountDetailModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.BlogController",
    "Method": "GetAllSync",
    "RelativePath": "api/Blog",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Domain.Models.Dto.Response.BlogDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.BlogController",
    "Method": "CreateBlog",
    "RelativePath": "api/Blog",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "blogdto",
        "Type": "Domain.Models.Dto.Request.BlogRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.BlogDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.BlogController",
    "Method": "UpdateBlog",
    "RelativePath": "api/Blog/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "blogdto",
        "Type": "Domain.Models.Dto.Update.BlogUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.BlogController",
    "Method": "DeleteBlog",
    "RelativePath": "api/Blog/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.BlogController",
    "Method": "GetByIdAsync",
    "RelativePath": "api/Blog/async/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.BlogDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.BlogCommentController",
    "Method": "GetAllSync",
    "RelativePath": "api/BlogComment",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Domain.Models.Dto.Response.BlogCommentDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.BlogCommentController",
    "Method": "CreateBlogComment",
    "RelativePath": "api/BlogComment",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "blogCommentdto",
        "Type": "Domain.Models.Dto.Request.BlogCommentRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.BlogCommentDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.BlogCommentController",
    "Method": "UpdateBlogComment",
    "RelativePath": "api/BlogComment/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "blogCommentdto",
        "Type": "Domain.Models.Dto.Update.BlogCommentUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.BlogCommentController",
    "Method": "DeleteBlogComment",
    "RelativePath": "api/BlogComment/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.BlogCommentController",
    "Method": "GetBlogCommentsByBlogIdAsync",
    "RelativePath": "api/BlogComment/BlogId/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.BlogCommentController",
    "Method": "GetBlogCommentsByUserIDInBlog",
    "RelativePath": "api/BlogComment/BlogId/UserID",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "uid",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "bid",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.BlogImageController",
    "Method": "GetAllSync",
    "RelativePath": "api/BlogImage",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Domain.Models.Dto.Response.BlogImageDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.BlogImageController",
    "Method": "CreateBlogImage",
    "RelativePath": "api/BlogImage",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "blogImagedto",
        "Type": "Domain.Models.Dto.Request.BlogImageRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.BlogImageDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.BlogImageController",
    "Method": "UpdateBlogImage",
    "RelativePath": "api/BlogImage/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "blogImagedto",
        "Type": "Domain.Models.Dto.Update.BlogImageUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.BlogImageController",
    "Method": "DeleteBlogImage",
    "RelativePath": "api/BlogImage/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.BlogImageController",
    "Method": "GetByIdAsync",
    "RelativePath": "api/BlogImage/GetBlogImageById/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.BlogImageDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.CartController",
    "Method": "GetAllAsync",
    "RelativePath": "api/Cart",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Domain.Models.Dto.Response.CartDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.CartController",
    "Method": "CreateOrder",
    "RelativePath": "api/Cart",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cartdto",
        "Type": "Domain.Models.Dto.Request.CartRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.CartDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.CartController",
    "Method": "AddItemToCart",
    "RelativePath": "api/Cart/AddItem",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "cartItemDto",
        "Type": "Domain.Models.Dto.Request.CartItemRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.CartController",
    "Method": "GetCartByIdAsync",
    "RelativePath": "api/Cart/CartId/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.CartDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.CartController",
    "Method": "RemoveItemFromCart",
    "RelativePath": "api/Cart/RemoveItem",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "cartItemDto",
        "Type": "Domain.Models.Dto.Request.CartItemRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.CartController",
    "Method": "GetCartByUserIdAsync",
    "RelativePath": "api/Cart/UserId/{UserId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "UserId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.CartDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.CartItemController",
    "Method": "DeleteCartItem",
    "RelativePath": "api/CartItem/{userId}/{productId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "productId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.CartItemController",
    "Method": "UpdateCartItem",
    "RelativePath": "api/CartItem/{userId}/items/{productId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "productId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "cartItemUpdateDto",
        "Type": "Domain.Models.Dto.Update.CartItemUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.CategoryController",
    "Method": "GetAllASync",
    "RelativePath": "api/Category",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Domain.Models.Dto.Response.CategoryDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.CategoryController",
    "Method": "CreateCategory",
    "RelativePath": "api/Category",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "category",
        "Type": "Domain.Models.Dto.Request.CategoryRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Entity.Category",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.CategoryController",
    "Method": "UpdateCategory",
    "RelativePath": "api/Category/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "categoryDto",
        "Type": "Domain.Models.Dto.Request.CategoryRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.CategoryController",
    "Method": "DeleteCategory",
    "RelativePath": "api/Category/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.CategoryController",
    "Method": "GetByIdAsync",
    "RelativePath": "api/Category/GetCategoryById/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.CategoryDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.KoiController",
    "Method": "GetAllAsync",
    "RelativePath": "api/Koi",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Domain.Models.Dto.Response.KoiDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.KoiController",
    "Method": "CreateKoi",
    "RelativePath": "api/Koi",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "koi",
        "Type": "Domain.Models.Dto.Request.KoiRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Koi",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.KoiController",
    "Method": "UpdateKoi",
    "RelativePath": "api/Koi/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "koidto",
        "Type": "Domain.Models.Dto.Update.KoiUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.KoiController",
    "Method": "DeleteKoi",
    "RelativePath": "api/Koi/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.KoiController",
    "Method": "GetAllKoiByUserIdAsync",
    "RelativePath": "api/Koi/GetAllKoiByUserId",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userid",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Domain.Models.Dto.Response.KoiDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.KoiController",
    "Method": "GetKoiByUserIdAsync",
    "RelativePath": "api/Koi/GetKoiAliveInAllPond",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userid",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Domain.Models.Dto.Response.KoiDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.KoiController",
    "Method": "GetByIdAsync",
    "RelativePath": "api/Koi/GetKoiById/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.KoiDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.KoiController",
    "Method": "GetKoiDeadByUserIdAsync",
    "RelativePath": "api/Koi/GetKoiDeadInAllPond",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userid",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Domain.Models.Dto.Response.KoiDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.KoiController",
    "Method": "GetKoiFemaleAliveAsync",
    "RelativePath": "api/Koi/GetKoiFemaleAliveInAllPond",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userid",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Domain.Models.Dto.Response.KoiDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.KoiController",
    "Method": "GetKoiFemaleAliveInPondAsync",
    "RelativePath": "api/Koi/GetKoiFemaleAliveInPond",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userid",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "pondId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Domain.Models.Dto.Response.KoiDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.KoiController",
    "Method": "GetKoiFemaleDeadAsync",
    "RelativePath": "api/Koi/GetKoiFemaleDeadInAllPond",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userid",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Domain.Models.Dto.Response.KoiDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.KoiController",
    "Method": "GetKoiFemaleDeadInPondAsync",
    "RelativePath": "api/Koi/GetKoiFemaleDeadInPond",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userid",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "pondId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Domain.Models.Dto.Response.KoiDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.KoiController",
    "Method": "GetKoiByFemaleSexAsync",
    "RelativePath": "api/Koi/GetKoiFemaleInAllPond",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userid",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Domain.Models.Dto.Response.KoiDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.KoiController",
    "Method": "GetKoiMaleAliveAsync",
    "RelativePath": "api/Koi/GetKoiMaleAliveInAllPond",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userid",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Domain.Models.Dto.Response.KoiDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.KoiController",
    "Method": "GetKoiMaleAliveInPondAsync",
    "RelativePath": "api/Koi/GetKoiMaleAliveInPond",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userid",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "pondId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Domain.Models.Dto.Response.KoiDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.KoiController",
    "Method": "GetKoiMaleDeadAsync",
    "RelativePath": "api/Koi/GetKoiMaleDeadInAllPond",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userid",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Domain.Models.Dto.Response.KoiDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.KoiController",
    "Method": "GetKoiMaleDeadInPondAsync",
    "RelativePath": "api/Koi/GetKoiMaleDeadInPond",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userid",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "pondId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Domain.Models.Dto.Response.KoiDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.KoiController",
    "Method": "GetKoiByMaleSexAsync",
    "RelativePath": "api/Koi/GetKoiMaleInAllPond",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userid",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Domain.Models.Dto.Response.KoiDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.KoiImageController",
    "Method": "GetAllSync",
    "RelativePath": "api/KoiImage",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Domain.Models.Dto.Response.KoiImageDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.KoiImageController",
    "Method": "CreateKoiImage",
    "RelativePath": "api/KoiImage",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "koiImagedto",
        "Type": "Domain.Models.Dto.Request.KoiImageRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.KoiImageDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.KoiImageController",
    "Method": "UpdateKoiImage",
    "RelativePath": "api/KoiImage/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "koiImagedto",
        "Type": "Domain.Models.Dto.Update.KoiImageUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.KoiImageController",
    "Method": "DeleteKoiImage",
    "RelativePath": "api/KoiImage/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.KoiImageController",
    "Method": "GetByIdAsync",
    "RelativePath": "api/KoiImage/async/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.KoiImageDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.KoiRecordController",
    "Method": "GetAllSync",
    "RelativePath": "api/KoiRecord",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Domain.Models.Dto.Response.KoiRecordDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.KoiRecordController",
    "Method": "CreateKoiRecord",
    "RelativePath": "api/KoiRecord",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "koiRecorddto",
        "Type": "Domain.Models.Dto.Request.KoiRecordRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.KoiRecordDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.KoiRecordController",
    "Method": "UpdateKoiRecord",
    "RelativePath": "api/KoiRecord/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "koiRecorddto",
        "Type": "Domain.Models.Dto.Update.KoiRecordUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.KoiRecordController",
    "Method": "DeleteKoiRecord",
    "RelativePath": "api/KoiRecord/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.KoiRecordController",
    "Method": "GetByIdAsync",
    "RelativePath": "api/KoiRecord/async/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.KoiRecordDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.KoiRecordController",
    "Method": "GetKoiRecordByKoiIdAsync",
    "RelativePath": "api/KoiRecord/GetKoiRecordByKoiId/{KoiId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "KoiId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.KoiRemindController",
    "Method": "GetAllSync",
    "RelativePath": "api/KoiRemind",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Domain.Models.Dto.Response.KoiRemindDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.KoiRemindController",
    "Method": "CreateKoiRemind",
    "RelativePath": "api/KoiRemind",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "koiReminddto",
        "Type": "Domain.Models.Dto.Request.KoiRemindRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.KoiRemindDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.KoiRemindController",
    "Method": "UpdateKoiRemind",
    "RelativePath": "api/KoiRemind/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "koiReminddto",
        "Type": "Domain.Models.Dto.Update.KoiRemindUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.KoiRemindController",
    "Method": "DeleteKoiRemind",
    "RelativePath": "api/KoiRemind/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.KoiRemindController",
    "Method": "GetByIdAsync",
    "RelativePath": "api/KoiRemind/async/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.KoiRemindDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.NewsController",
    "Method": "GetAllSync",
    "RelativePath": "api/News",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Domain.Models.Entity.News, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.NewsController",
    "Method": "CreateNews",
    "RelativePath": "api/News",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "newsdto",
        "Type": "Domain.Models.Dto.Request.NewsRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.NewsDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.NewsController",
    "Method": "UpdateNews",
    "RelativePath": "api/News/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "newsdto",
        "Type": "Domain.Models.Dto.Update.NewsUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.NewsController",
    "Method": "DeleteNews",
    "RelativePath": "api/News/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.NewsController",
    "Method": "GetByIdAsync",
    "RelativePath": "api/News/async/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.NewsDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.NewsImageController",
    "Method": "CreateNews",
    "RelativePath": "api/NewsImage",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "newsdto",
        "Type": "Domain.Models.Dto.Request.NewsImageRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.NewsImageDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.NewsImageController",
    "Method": "UpdateNewsImage",
    "RelativePath": "api/NewsImage/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "newsdto",
        "Type": "Domain.Models.Dto.Request.NewsImageRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.NewsImageController",
    "Method": "DeleteNews",
    "RelativePath": "api/NewsImage/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.NewsImageController",
    "Method": "GetByIdAsync",
    "RelativePath": "api/NewsImage/Async/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.NewsImageDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.OrderController",
    "Method": "GetAllAsync",
    "RelativePath": "api/Order",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Domain.Models.Dto.Response.OrderDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.OrderController",
    "Method": "CreateOrder",
    "RelativePath": "api/Order",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderdto",
        "Type": "Domain.Models.Dto.Request.OrderRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.OrderDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.OrderController",
    "Method": "CreateOrderVip",
    "RelativePath": "api/Order/CreateOrderVip",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "ordervipdto",
        "Type": "Domain.Models.Dto.Request.OrderVipRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.OrderDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.OrderController",
    "Method": "GetOrderByIdAsync",
    "RelativePath": "api/Order/OrderId/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.OrderDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.OrderController",
    "Method": "GetOrderByUserIdAsync",
    "RelativePath": "api/Order/UserId/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.PondController",
    "Method": "CreatePond",
    "RelativePath": "api/Pond",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "ponddto",
        "Type": "Domain.Models.Dto.Request.PondRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Entity.Pond",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.PondController",
    "Method": "UpdatePond",
    "RelativePath": "api/Pond/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "ponddto",
        "Type": "Domain.Models.Dto.Update.PondUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.PondController",
    "Method": "DeletePond",
    "RelativePath": "api/Pond/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.PondController",
    "Method": "GetByIdAsync",
    "RelativePath": "api/Pond/async/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.PondDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.PondController",
    "Method": "GetFood",
    "RelativePath": "api/Pond/GetFishNumberByPondId/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.PondController",
    "Method": "GetPondByUserIdAsync",
    "RelativePath": "api/Pond/GetPondsByUserId/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.PondController",
    "Method": "GetFishInPond",
    "RelativePath": "api/Pond/ListKoiInPond/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.PondController",
    "Method": "WaterParameterListByPondId",
    "RelativePath": "api/Pond/ListWaterParameter/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.ProductController",
    "Method": "GetAllSync",
    "RelativePath": "api/Product",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Domain.Models.Dto.Response.ProductDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.ProductController",
    "Method": "CreateProduct",
    "RelativePath": "api/Product",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "productdto",
        "Type": "Domain.Models.Dto.Request.ProductRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Entity.Product",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.ProductController",
    "Method": "UpdateProduct",
    "RelativePath": "api/Product/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "productdto",
        "Type": "Domain.Models.Dto.Update.ProductUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.ProductController",
    "Method": "DeleteProduct",
    "RelativePath": "api/Product/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.ProductController",
    "Method": "GetProductByCategoryId",
    "RelativePath": "api/Product/GetProductByCategoryId/{CategoryId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "CategoryId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Domain.Models.Dto.Response.ProductDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.ProductController",
    "Method": "GetProductByCategoryIdInShop",
    "RelativePath": "api/Product/GetProductByCategoryIdInShop/{ShopId}/{CategoryId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "CategoryId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "ShopId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Domain.Models.Dto.Response.ProductDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.ProductController",
    "Method": "GetByIdAsync",
    "RelativePath": "api/Product/GetProductById/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.ProductDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.ProductController",
    "Method": "GetProductByName",
    "RelativePath": "api/Product/GetProductByName/{Name}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Name",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Domain.Models.Dto.Response.ProductDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.ProductController",
    "Method": "GetProductImage",
    "RelativePath": "api/Product/GetProductImageByProductId/{ProductId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "ProductId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Domain.Models.Dto.Response.ProductImageDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.ProductController",
    "Method": "GetProductOnShop",
    "RelativePath": "api/Product/GetProductOnShop/{ShopId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "ShopId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Domain.Models.Dto.Response.ProductDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.ProductController",
    "Method": "GetProductOutOfStockOnShop",
    "RelativePath": "api/Product/GetProductOutOfStockInShop/{ShopId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "ShopId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Domain.Models.Dto.Response.ProductDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.ProductController",
    "Method": "GetProductQuantityByCategoryIdAsync",
    "RelativePath": "api/Product/ProductQuantityByCategory/{categoryId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "categoryId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Int32",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.ProductController",
    "Method": "SearchProducts",
    "RelativePath": "api/Product/Search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "categoryId",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "minPrice",
        "Type": "System.Nullable\u00601[[System.Decimal, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "maxPrice",
        "Type": "System.Nullable\u00601[[System.Decimal, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "shopId",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Domain.Models.Dto.Response.ProductDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.ProductController",
    "Method": "GetProductByShopIdAsync",
    "RelativePath": "api/Product/ShopId/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.ProductImageController",
    "Method": "GetAllSync",
    "RelativePath": "api/ProductImage",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Domain.Models.Dto.Response.ProductImageDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.ProductImageController",
    "Method": "CreateProductImage",
    "RelativePath": "api/ProductImage",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "productImagedto",
        "Type": "Domain.Models.Dto.Request.ProductImageRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.ProductImageDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.ProductImageController",
    "Method": "UpdateProductImage",
    "RelativePath": "api/ProductImage/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "productImagedto",
        "Type": "Domain.Models.Dto.Update.ProductImageUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.ProductImageController",
    "Method": "DeleteProductImage",
    "RelativePath": "api/ProductImage/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.ProductImageController",
    "Method": "GetByIdAsync",
    "RelativePath": "api/ProductImage/async/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.ProductImageDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.RevenueController",
    "Method": "GetAllAsync",
    "RelativePath": "api/Revenue",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Domain.Models.Dto.Response.RevenueDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.RevenueController",
    "Method": "GetByIdAsync",
    "RelativePath": "api/Revenue/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.RevenueDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.SaltCalculateController",
    "Method": "CalculateDecreaseConcentration",
    "RelativePath": "api/SaltCalculate/decrease-concentration",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Domain.Models.Dto.Request.SaltCalculateRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.SaltCalculateDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.SaltCalculateController",
    "Method": "CalculateIncreaseConcentration",
    "RelativePath": "api/SaltCalculate/increase-concentration",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Domain.Models.Dto.Request.SaltCalculateRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.SaltCalculateDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.SaltCalculateController",
    "Method": "GetPondVolume",
    "RelativePath": "api/SaltCalculate/pond-volume/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Int32",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.SaltCalculateController",
    "Method": "CalculateWaterChangeSalt",
    "RelativePath": "api/SaltCalculate/water-change-salt",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Domain.Models.Dto.Request.SaltCalculateRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.SaltCalculateDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.ShopController",
    "Method": "GetAllSync",
    "RelativePath": "api/Shop",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[KCSAH.APIServer.Dto.ShopDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.ShopController",
    "Method": "CreateShop",
    "RelativePath": "api/Shop",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "shopdto",
        "Type": "Domain.Models.Dto.Request.ShopRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Entity.Shop",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.ShopController",
    "Method": "UpdateShop",
    "RelativePath": "api/Shop/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "shopdto",
        "Type": "Domain.Models.Dto.Update.ShopUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.ShopController",
    "Method": "DeleteShop",
    "RelativePath": "api/Shop/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.ShopController",
    "Method": "GetByIdAsync",
    "RelativePath": "api/Shop/GetShopByShopId/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "KCSAH.APIServer.Dto.ShopDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "KCSAH.APIServer.Controllers.ShopController",
    "Method": "GetShopByUserIdAsync",
    "RelativePath": "api/Shop/UserId/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.ShopRatingController",
    "Method": "CreateRating",
    "RelativePath": "api/ShopRating",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "ratingdto",
        "Type": "Domain.Models.Dto.Request.ShopRatingRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.ShopRatingDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.VipPackageController",
    "Method": "GetAllSync",
    "RelativePath": "api/VipPackage",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Domain.Models.Dto.Response.VipPackageDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.VipPackageController",
    "Method": "CreateVipRecord",
    "RelativePath": "api/VipPackage",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "vippackagedto",
        "Type": "Domain.Models.Dto.Request.VipPackageRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Entity.VipPackage",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.VipPackageController",
    "Method": "UpdateVipPackage",
    "RelativePath": "api/VipPackage/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "vipdto",
        "Type": "Domain.Models.Dto.Request.VipPackageRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.VipPackageController",
    "Method": "DeleteVipPackage",
    "RelativePath": "api/VipPackage/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.VipPackageController",
    "Method": "GetByIdAsync",
    "RelativePath": "api/VipPackage/GetVipPackageById/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.VipPackageDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.VipPackageController",
    "Method": "GetVipPackageByName",
    "RelativePath": "api/VipPackage/GetVipPackageByName/{Name}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Name",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.VipPackageDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.VipRecordController",
    "Method": "GetAllSync",
    "RelativePath": "api/VipRecord",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Domain.Models.Dto.Response.VipRecordDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.VipRecordController",
    "Method": "CreateVipRecord",
    "RelativePath": "api/VipRecord",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "viprecorddto",
        "Type": "Domain.Models.Dto.Request.VipRecordRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Entity.VipRecord",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.VipRecordController",
    "Method": "DeleteVipRecord",
    "RelativePath": "api/VipRecord/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.VipRecordController",
    "Method": "GetByIdAsync",
    "RelativePath": "api/VipRecord/GetVipRecordById/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.VipRecordDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.VipRecordController",
    "Method": "GetVipRecordByUserId",
    "RelativePath": "api/VipRecord/GetVipRecordByUserId/{UserId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "UserId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.VipRecordDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.VNPayController",
    "Method": "CreatePayment",
    "RelativePath": "api/VNPay/create-payment",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "Domain.Models.Dto.Request.VNPayRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.VNPayController",
    "Method": "VnPayReturn",
    "RelativePath": "api/VNPay/vnpay-return",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "returnUrl",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.WaterParameterController",
    "Method": "GetAllAsync",
    "RelativePath": "api/WaterParameter",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Domain.Models.Dto.Response.WaterParameterDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.WaterParameterController",
    "Method": "CreateWaterParameter",
    "RelativePath": "api/WaterParameter",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "waterparameterDto",
        "Type": "Domain.Models.Dto.Request.WaterParameterRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Entity.WaterParameter",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.WaterParameterController",
    "Method": "UpdateWater",
    "RelativePath": "api/WaterParameter/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "waterdto",
        "Type": "Domain.Models.Dto.Update.WaterParameterUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.WaterParameterController",
    "Method": "DeleteWaterParameter",
    "RelativePath": "api/WaterParameter/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIService.Controllers.WaterParameterController",
    "Method": "GetByIdAsync",
    "RelativePath": "api/WaterParameter/async/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.Models.Dto.Response.WaterParameterDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIService.Controllers.WaterParameterController",
    "Method": "GetByPondIdAsync",
    "RelativePath": "api/WaterParameter/WaterParameterByPondId/{pondId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pondId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Domain.Models.Dto.Response.WaterParameterDTO, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]